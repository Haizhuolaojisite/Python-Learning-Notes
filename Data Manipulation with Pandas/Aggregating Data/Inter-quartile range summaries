The .agg() method allows you to apply your own custom functions to a DataFrame, as well as apply functions to more than one column 
of a DataFrame at once, making your aggregations super efficient.

In the custom function for this exercise, "IQR" is short for inter-quartile range, which is the 75th percentile minus the 25th percentile. 
It's an alternative to standard deviation that is helpful if your data contains outliers.

sales is available and pandas is loaded as pd.
===========================================================================================================================================

# A custom IQR function
def iqr(column):
    return column.quantile(0.75) - column.quantile(0.25)
    
# Print IQR of the temperature_c column
print(sales['temperature_c'].agg(iqr))

<script.py> output:
    16.583333333333336

# Update to print IQR of temperature_c, fuel_price_usd_per_l, & unemployment
print(sales[['temperature_c','fuel_price_usd_per_l','unemployment']].agg(iqr))

<script.py> output:
    temperature_c           16.583
    fuel_price_usd_per_l     0.073
    unemployment             0.565
    dtype: float64

======================================================================

# Import NumPy and create custom IQR function
import numpy as np
def iqr(column):
    return column.quantile(0.75) - column.quantile(0.25)
    
# Update to print IQR and median of temperature_c, fuel_price_usd_per_l, & unemployment
print(sales[["temperature_c", "fuel_price_usd_per_l", "unemployment"]].agg([iqr, np.median]))

       temperature_c  fuel_price_usd_per_l  unemployment
iqr            16.583                 0.073         0.565
median         16.967                 0.743         8.099

