Walmart distinguishes three types of stores: "supercenters", "discount stores", and "neighborhood markets", encoded in this dataset 
as type "A", "B", and "C". 

In this exercise, you'll calculate the total sales made at each store type, without using .groupby(). 
You can then use these numbers to see what proportion of Walmart's total sales were made at each.

sales is available and pandas is imported as pd.
========================================================================================================================================

# Calc total weekly sales
sales_all = sales["weekly_sales"].sum()

# Subset for type A stores, calc total weekly sales
sales_A = sales[sales["type"] == "A"]["weekly_sales"].sum()

# Subset for type B stores, calc total weekly sales
sales_B = sales[sales["type"] == "B"]["weekly_sales"].sum()

# Subset for type C stores, calc total weekly sales
sales_C = sales[sales["type"] == "C"]["weekly_sales"].sum()

# Get proportion for each type
sales_propn_by_type = [sales_A, sales_B, sales_C] / sales_all
print(sales_propn_by_type)


[0.9097747 0.0902253 0.       ]
=====================================================================================================================================
Calculations with .groupby()

The .groupby() method makes life much easier. In this exercise, you'll perform the same calculations as last time, 
except you'll use the .groupby() method. You'll also perform calculations on data grouped by two variables to see if sales 
differs by store type depending on if it's a holiday week or not.

sales is available and pandas is loaded as pd.
=======================================================================================================================================


# Group by type; calc total weekly sales
sales_by_type = sales.groupby("type")["weekly_sales"].sum()

# Get proportion for each type
sales_propn_by_type = sales_by_type/sum(sales_by_type)
print(sales_propn_by_type)

type
A    0.91
B    0.09
Name: weekly_sales, dtype: float64

# Group by type and is_holiday; calc total weekly sales
sales_by_type_is_holiday = sales.groupby(["type","is_holiday"])["weekly_sales"].sum()
print(sales_by_type_is_holiday)

<script.py> output:
    type  is_holiday
    A     False         2.337e+08
          True          2.360e+04
    B     False         2.318e+07
          True          1.621e+03
    Name: weekly_sales, dtype: float64
